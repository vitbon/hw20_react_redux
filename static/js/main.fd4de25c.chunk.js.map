{"version":3,"sources":["redux/reducer.js","redux/types.js","redux/store.js","component/createPost/CreatePost.js","redux/actions.js","component/post/post.js","App.js","index.js"],"names":["initialStore","id","name","avatar","nickname","date","content","image","message","messageIsPressed","reTweet","reTweetIsPressed","like","likeIsPressed","reducer","store","action","type","console","log","payload","createStore","composeWithDevTools","applyMiddleware","thunk","CreatePost","props","avatarID","nameDropDown","updateData","d","Date","day","getDate","month","getMonth","st","getState","setState","length","handleAvatar","e","a","avasURL","handleDropDown","target","value","state","this","storeUnsubscribe","subscribe","path","className","onClick","src","onChange","alt","placeholder","defaultValue","addPost","document","getElementById","reset","Component","connect","dispatch","arg","changeMessage","changeReTweet","changeLike","width","App","forceUpdate","useState","setValue","useForceUpdate","map","post","index","key","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.fd4de25c.chunk.js","sourcesContent":["import { CHANGE_MESSAGE, CHANGE_RETWEET, CHANGE_LIKE, ADD_POST } from \"./types\";\r\nimport store from \"./store\";\r\n\r\nconst initialStore = [\r\n  {\r\n    id: 3,\r\n    name: \"Anakin Skywalker\",\r\n    avatar: \"https://github.com/vitbon/hw20_react_redux/raw/master/public/img/skywalker-ava.jpg\",\r\n    nickname: \"@anakin-batya\",\r\n    date: \"14 mar.\",\r\n    content: \"WTF? Who is Ray? Why she is Skywalker? Luke...?\",\r\n    image: \"https://github.com/vitbon/hw20_react_redux/raw/master/public/img/sw9_ReySabre-laser.jpg\",\r\n    message: 482,\r\n    messageIsPressed: false,\r\n    reTweet: 146,\r\n    reTweetIsPressed: false,\r\n    like: 529,\r\n    likeIsPressed: false,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Emperor Palpatine\",\r\n    avatar: \"https://github.com/vitbon/hw20_react_redux/raw/master/public/img/sheevPalpatine-ava.jpg\",\r\n    nickname: \"@sheva-imperator\",\r\n    date: \"17 apr.\",\r\n    content: \"That woman could turn any Ewok into a Wookie.\",\r\n    image: \"https://github.com/vitbon/hw20_react_redux/raw/master/public/img/sw9_PadmeAmidala-pictol.jpg\",\r\n    message: 321,\r\n    messageIsPressed: false,\r\n    reTweet: 97,\r\n    reTweetIsPressed: false,\r\n    like: 784,\r\n    likeIsPressed: false,\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"Princess/General Leia Organa\",\r\n    avatar: \"https://github.com/vitbon/hw20_react_redux/raw/master/public/img/leiaOrgana-ava.jpg\",\r\n    nickname: \"@princess-Leia\",\r\n    date: \"25 sep.\",\r\n    content: \"What if you took Han Solo and gave him no depth?\",\r\n    image: \"https://github.com/vitbon/hw20_react_redux/raw/master/public/img/sw9_PoeDameron-jet.jpg\",\r\n    message: 296,\r\n    messageIsPressed: false,\r\n    reTweet: 138,\r\n    reTweetIsPressed: false,\r\n    like: 754,\r\n    likeIsPressed: false,\r\n  },\r\n];\r\n\r\nfunction reducer (store = initialStore, action) {\r\n  switch(action.type) {\r\n    case ADD_POST: {\r\n      console.log([...store, {...action.payload}]);\r\n      return [{...action.payload}, ...store];\r\n    }\r\n    // case CHANGE_MESSAGE: {\r\n    //   if (store[store.length-1].messageIsPressed) {\r\n    //     store[store.length-1].message -= 1;\r\n    //     store[store.length-1].messageIsPressed = !store[store.length-1].messageIsPressed;\r\n    //   } else {\r\n    //     store[store.length-1].message += 1;\r\n    //     store[store.length-1].messageIsPressed = !store[store.length-1].messageIsPressed;\r\n    //   }\r\n    //   return [...store];\r\n    // }\r\n    // case CHANGE_RETWEET: {\r\n    //   if (store[store.length-1].reTweetIsPressed) {\r\n    //     store[store.length-1].reTweet -= 1;\r\n    //     store[store.length-1].reTweetIsPressed = !store[store.length-1].reTweetIsPressed;\r\n    //   } else {\r\n    //     store[store.length-1].reTweet += 1;\r\n    //     store[store.length-1].reTweetIsPressed = !store[store.length-1].reTweetIsPressed;\r\n    //   }\r\n    //   return [...store];\r\n    // }\r\n    // case CHANGE_LIKE: {\r\n    //   if (store[store.length-1].likeIsPressed) {\r\n    //     store[store.length-1].like -= 1;\r\n    //     store[store.length-1].likeIsPressed = !store[store.length-1].likeIsPressed;\r\n    //   } else {\r\n    //     store[store.length-1].like += 1;\r\n    //     store[store.length-1].likeIsPressed = !store[store.length-1].likeIsPressed;\r\n    //   }\r\n    //   return [...store];\r\n    // }\r\n  }\r\n  return store;\r\n}\r\n\r\nexport default reducer;\r\n\r\n/*\r\n    case CHANGE_MESSAGE: {\r\n      if (store[store.length-1].messageIsPressed) {\r\n        store[store.length-1].message -= 1;\r\n        store[store.length-1].messageIsPressed = !store[store.length-1].messageIsPressed;\r\n      } else {\r\n        store[store.length-1].message += 1;\r\n        store[store.length-1].messageIsPressed = !store[store.length-1].messageIsPressed;\r\n      }\r\n      return [...store];\r\n    }\r\n    case CHANGE_RETWEET: {\r\n      if (store[store.length-1].reTweetIsPressed) {\r\n        store[store.length-1].reTweet -= 1;\r\n        store[store.length-1].reTweetIsPressed = !store[store.length-1].reTweetIsPressed;\r\n      } else {\r\n        store[store.length-1].reTweet += 1;\r\n        store[store.length-1].reTweetIsPressed = !store[store.length-1].reTweetIsPressed;\r\n      }\r\n      return [...store];\r\n    }\r\n    case CHANGE_LIKE: {\r\n      if (store[store.length-1].likeIsPressed) {\r\n        store[store.length-1].like -= 1;\r\n        store[store.length-1].likeIsPressed = !store[store.length-1].likeIsPressed;\r\n      } else {\r\n        store[store.length-1].like += 1;\r\n        store[store.length-1].likeIsPressed = !store[store.length-1].likeIsPressed;\r\n      }\r\n      return [...store];\r\n    }\r\n\r\n */","export const CHANGE_MESSAGE = 'CHANGE_MESSAGE';\r\nexport const CHANGE_RETWEET = 'CHANGE_RETWEET';\r\nexport const CHANGE_LIKE = 'CHANGE_LIKE';\r\nexport const ADD_POST = 'ADD_POST';\r\n\r\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk'\r\nimport reducer from './reducer';\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  composeWithDevTools(applyMiddleware(thunk)\r\n));\r\n\r\nexport default store;\r\n","import React, {Component} from \"react\";\r\nimport './CreatePost.css';\r\nimport store from '../../redux/store';\r\nimport {connect, useDispatch} from 'react-redux';\r\nimport reducer from '../../redux/reducer.js';\r\nimport { changeMessage, changeReTweet, changeLike, addPost } from \"../../redux/actions\";\r\n\r\nclass CreatePost extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: 0,\r\n      name: \"\",\r\n      avatar: \"\",\r\n      nickname: \"\",\r\n      date: \"\",\r\n      content: \"\",\r\n      image: \"\",\r\n      message: 0,\r\n      messageIsPressed: false,\r\n      reTweet: 0,\r\n      reTweetIsPressed: false,\r\n      like: 0,\r\n      likeIsPressed: false,\r\n    };\r\n  };\r\n\r\n  avatarID = 3;\r\n  nameDropDown = ['Dart Weider', 'Sky Walker', 'Sheev Palpatine', 'Leia Organa'];\r\n\r\n  componentWillMount() {\r\n    console.log('componentWillUnmount');\r\n    this.storeUnsubscribe = store.subscribe(() => {\r\n      this.updateData();\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateData();\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.storeUnsubscribe();\r\n    this.setState({name: this.nameDropDown[0]});\r\n    this.setState({nickname: ''});\r\n    this.setState({content: ''});\r\n    this.setState({image: ''});\r\n  };\r\n\r\n  updateData = () => {\r\n    const getRnd = (min, max) => { return (Math.round(Math.random() * (max - min) + min)) };\r\n    const d = new Date();\r\n    const day = d.getDate();\r\n    const month = d.getMonth();\r\n    const strMonth = ['jan.', 'feb.', 'mar.', 'apr.', 'may', 'jun.', 'jul.', 'aug.', 'sep.', 'oct.', 'nov.', 'dec.'];\r\n    const st = store.getState();\r\n    this.setState({id: st.length + 1});\r\n    this.setState({avatar: \"https://github.com/vitbon/hw20_react_redux/raw/master/public/img/dartWeider-ava.jpg\"});\r\n    this.setState({date: day + ' ' + strMonth[month]});\r\n    };\r\n\r\n  handleAvatar = async (e) => {\r\n    if (this.avatarID >= 3) this.avatarID = 0;\r\n      else this.avatarID += 1;\r\n    const avasURL = [\r\n      \"https://github.com/vitbon/hw20_react_redux/raw/master/public/img/skywalker-ava.jpg\",\r\n      \"https://github.com/vitbon/hw20_react_redux/raw/master/public/img/sheevPalpatine-ava.jpg\",\r\n      \"https://github.com/vitbon/hw20_react_redux/raw/master/public/img/leiaOrgana-ava.jpg\",\r\n      \"https://github.com/vitbon/hw20_react_redux/raw/master/public/img/dartWeider-ava.jpg\",\r\n    ];\r\n    await this.setState({avatar: avasURL[this.avatarID]});\r\n  };\r\n\r\n  handleDropDown = async (e) => {\r\n    this.setState({name: e.target.value});\r\n  }\r\n\r\n  render() {\r\n    const path = 'https://github.com/vitbon/hw20_react_redux/raw/master/public/img/';\r\n    return (\r\n      <div className={\"background\"}>\r\n        <div className=\"create_card\">\r\n          <div className=\"create_card_header\">\r\n            <span className=\"create_card_header_avatar\" onClick={this.handleAvatar}>\r\n              <img src={this.state.avatar} />\r\n            </span>\r\n            <span className=\"create_card_header_textBox\">\r\n              <div className=\"create_card_header_textBox_name\">\r\n                <form id=\"add_post\">\r\n                  <select className=\"create_hero_name\"\r\n                          value={this.state.name}\r\n                          onChange={this.handleDropDown}>\r\n                    <option value={this.nameDropDown[0]}>Dart Weider</option>\r\n                    <option value={this.nameDropDown[1]}>Sky Walker</option>\r\n                    <option value={this.nameDropDown[2]}>Sheev Palpatine</option>\r\n                    <option value={this.nameDropDown[3]}>Leia Organa</option>\r\n                  </select>\r\n                  <img src={`${path}` + \"star-active.png\"} className=\"star-active\" alt=\"Active Button\"/>\r\n                  <span>&nbsp; </span>\r\n                  <input className=\"create_hero_nick\"\r\n                         placeholder=\"Nickname...\"\r\n                         defaultValue={this.state.nickname}\r\n                         onChange={e => this.state.nickname = e.target.value}\r\n                  >\r\n                  </input>\r\n                  &bull; {this.state.date}\r\n                  <input className=\"create_hero_text\"\r\n                         placeholder=\"Text...\"\r\n                         onChange={e => this.state.content = e.target.value}\r\n                  >\r\n                  </input>\r\n                  <input className=\"create_card_url\"\r\n                         placeholder=\"Picture URL...\"\r\n                         onChange={e => this.state.image = e.target.value}\r\n                  >\r\n                  </input>\r\n                </form>\r\n              </div>\r\n              <div className=\"create_card_header_textBox_status\">\r\n                <span></span>\r\n              </div>\r\n            </span>\r\n          </div>\r\n\r\n          <div className=\"create_card_center\">\r\n            {/*<img src={this.state.image}/>*/}\r\n          </div>\r\n\r\n          <div className=\"create_card_footer\">\r\n          <span>\r\n            <a src=\"#\"><img src={`${path}` + \"tw-message.png\"} alt=\"Message Icon\"/>\r\n              <span className=\"icon2text\">\r\n                {this.state.message}\r\n              </span>\r\n            </a>\r\n          </span>\r\n          <span className=\"create_leftTab\">\r\n            <a src=\"#\"><img src={`${path}` + \"tw-retweet.png\"} alt=\"Retweet Icon\"/>\r\n              <span className=\"icon2text\">\r\n                {this.state.reTweet}\r\n              </span>\r\n            </a>\r\n          </span>\r\n            <span className=\"create_leftTab\">\r\n            <a src=\"#\"><img src={`${path}` + \"tw-like.png\"} alt=\"Like Icon\"/>\r\n              <span className=\"icon2text\">\r\n                {this.state.like}\r\n              </span>\r\n            </a>\r\n          </span>\r\n            <span className=\"create_leftTab\">\r\n            <a src=\"#\"><img src={`${path}` + \"tw-share.png\"} alt=\"Share Icon\"/></a>\r\n          </span>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n            <button className=\"create_publish_btn\"\r\n                    type=\"submit\"\r\n                    onClick={async () => { await this.setState({nickname: '@'+this.state.nickname})\r\n                                           await this.props.addPost(this.state)\r\n                                           await this.setState({nickname: ''})\r\n                                           await this.setState({name: this.nameDropDown[0]})\r\n                                           await this.setState({image: ''})\r\n                                           document.getElementById(\"add_post\").reset()\r\n                    }}\r\n            >\r\n              Publish\r\n            </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst getStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n //   message: state.message,\r\n  }\r\n}\r\n\r\nconst getDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (arg) => dispatch(addPost(arg)),\r\n  }\r\n}\r\n\r\nexport default connect(getStateToProps, getDispatchToProps)(CreatePost);\r\n\r\n{/*<input className=\"create_hero_name\"*/}\r\n{/*       placeholder=\"Full Name...\"*/}\r\n{/*       onChange={ e => this.state.name = e.target.value}*/}\r\n{/*>*/}\r\n{/*</input>*/}","import { CHANGE_MESSAGE, CHANGE_RETWEET, CHANGE_LIKE, ADD_POST } from \"./types\";\r\n\r\nconst changeMessage = text => {\r\n  return { type: CHANGE_MESSAGE, payload: text }\r\n}\r\n\r\nconst changeReTweet = text => {\r\n  return { type: CHANGE_RETWEET, payload: text }\r\n}\r\n\r\nconst changeLike = text => {\r\n  return { type: CHANGE_LIKE, payload: text }\r\n}\r\n\r\nconst addPost = obj => {\r\n  return { type: ADD_POST, payload: obj }\r\n}\r\n\r\nexport { changeMessage, changeReTweet, changeLike, addPost };\r\n","import React, {Component} from \"react\";\r\nimport {connect, useDispatch} from 'react-redux';\r\nimport reducer from '../../redux/reducer.js';\r\nimport store from '../../redux/store';\r\nimport { changeMessage, changeReTweet, changeLike, addPost } from \"../../redux/actions\";\r\n\r\n\r\nconst Post = (props) => {\r\n  const path = 'https://github.com/vitbon/hw20_react_redux/raw/master/public/img/';\r\n  return (\r\n    <div className={\"background\"}>\r\n      <div className=\"card\">\r\n        <div className=\"card__header\">\r\n          <span className=\"card__header_avatar\">\r\n            <img src={props.avatar} />\r\n          </span>\r\n          <span className=\"card__header__textBox\">\r\n            <div className=\"card__header__textBox_name\">\r\n              <span className=\"bold\">{props.name}</span>\r\n              <img src={`${path}`+\"star-active.png\"} className=\"star-active\" alt=\"Active Button\" />\r\n              <span className=\"gray\"><a>{props.nickname}</a> &bull; {props.date}</span>\r\n            </div>\r\n            <div className=\"card__header__textBox_status\">\r\n              <span>{props.content}</span>\r\n            </div>\r\n          </span>\r\n          <span className=\"card__header__textBox_dw_Arrow\"><img src={`${path}`+\"down-arrow.png\"} width=\"14px\" alt=\"Down Arrow\"/></span>\r\n        </div>\r\n\r\n        <div className=\"card__center\">\r\n          <img src={props.image} />\r\n        </div>\r\n\r\n        <div className=\"card__footer\">\r\n        <span>\r\n          <a src=\"#\"><img src={`${path}`+\"tw-message.png\"} alt=\"Message Icon\"/><span className=\"icon2text\">{props.message}</span></a>\r\n        </span>\r\n        <span className=\"leftTab\">\r\n          <a src=\"#\"><img src={`${path}`+\"tw-retweet.png\"} alt=\"Retweet Icon\"/><span className=\"icon2text\">{props.reTweet}</span></a>\r\n        </span>\r\n        <span className=\"leftTab\" onClick={(e) => props.changeLike(e.target)}>\r\n          <a src=\"#\"><img src={`${path}`+\"tw-like.png\"} alt=\"Like Icon\"/>\r\n          <span className=\"icon2text\">\r\n            {props.like}\r\n          </span>\r\n          </a>\r\n        </span>\r\n        <span className=\"leftTab\">\r\n          <a src=\"#\"><img src={`${path}`+\"tw-share.png\"} alt=\"Share Icon\" /></a>\r\n        </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst getStateToProps = (state) => {\r\n  return {\r\n    // message: state.message,\r\n    // reTweet: state.reTweet,\r\n    // like: state.like,\r\n  }\r\n}\r\n\r\nconst getDispatchToProps = (dispatch) => {\r\n  return {\r\n    changeMessage: e => dispatch(changeMessage(e)),\r\n    changeReTweet: e => dispatch(changeReTweet(e)),\r\n    changeLike: e => dispatch(changeLike(e)),\r\n  }\r\n}\r\n\r\nexport default connect(getStateToProps, getDispatchToProps)(Post);\r\n","import React, { useState } from 'react';\nimport CreatePost from './component/createPost/CreatePost';\nimport Post from './component/post/post';\nimport './component/post/post.css';\n// import {pData} from \"./component/post/post_data\";\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\n\nfunction useForceUpdate(){\n  const [value, setValue] = useState(0); // integer state\n  return () => setValue(value => ++value); // update the state to force render\n}\n\nfunction App() {\n  const forceUpdate = useForceUpdate();\n\n  store.subscribe(() => {\n    forceUpdate();\n  });\n\n  return (\n    <Provider store={store}>\n      <div>\n        <div>\n          <CreatePost />\n        </div>\n        <div>\n          { store.getState().map((post, index) => <Post {...post} key={index} /> )}\n        </div>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n\n/*\nЗавдання Basic:\n1. Створіть store та в ньому збережіть кілька публікацій з фейковими даними як на фото нижче. (автор, зображення автора,\n   нікнейм автора, дата публікації, текст публікації, зображення публікації, кількість лайків, кількість коментарів,\n   кількість перепостів).\n2. Створіть форму в яку можна ввести такі дані: текст публікації, посилання на зображення і вибір автора\n   з випадаючого списку (його так само необхідно завчасно підготувати у вигляді фейкових даних). Кнопка \"Додати\".\n3. При додаванні даних в форму і натисканні на кнопку \"Додати\" – дані відправляються в store (dispatch).\n\nЗавдання Advanced:\nЗробіть клікабельними кнопки: лайки/коментарі/поділитися.\nПри кожному натисканні необхідно збільшувати цифру на 1.\nПри кожному повторному натисканні необхідно зменшувати цифру на 1.\n */","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}